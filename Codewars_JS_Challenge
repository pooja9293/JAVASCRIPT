1. Multiply
   function multiply(a, b){
  a * b
}
This code does not execute properly. Try to figure out why.
=>   function multiply(a, b){
  return a * b
}

2. Get Planet Name By ID
function getPlanetName(id){
  var name;
  switch(id){
    case 1:
      name = 'Mercury'
    case 2:
      name = 'Venus'
    case 3:
      name = 'Earth'
    case 4:
      name = 'Mars'
    case 5:
      name = 'Jupiter'
    case 6:
      name = 'Saturn'
    case 7:
      name = 'Uranus'
    case 8:
      name = 'Neptune'
  }
  
  return name;
}
The function is not returning the correct values. Can you figure out why?
Example (Input --> Output ):
3 --> "Earth"
=> function getPlanetName(id){
  var name;
  switch(id){
    case 1:
      name = 'Mercury'
      break
    case 2:
      name = 'Venus'
      break
    case 3:
      name = 'Earth'
      break
    case 4:
      name = 'Mars'
      break
    case 5:
      name = 'Jupiter'
      break
    case 6:
      name = 'Saturn'
      break
    case 7:
      name = 'Uranus'
      break
    case 8:
      name = 'Neptune'
      break
  }
  
  return name;
}

3. Reversed Strings
=>  function solution(str){
  var splitstring=str.split("")
  var reversestring=splitstring.reverse()
  var reversed= reversestring.join("")
  return reversed
}

4. Even or Odd

=> function evenOrOdd(number) {
  if(number%2==0){
    return "Even"
  }
  else{
    return "Odd"
  }
    
}

5. Counting sheep...
=>  function countSheeps(sheep) {
  var counter=0
  sheep.forEach(item=>{
    if(item) counter++
  })
   return counter
  }

6. Vowel Count
=>  function getCount(str) {
  return (str.match(/[aeiou]/gi)||[]).length;
  }

7. Jenny's secret message
Jenny has written a function that returns a greeting for a user. However, she's in love with Johnny, and would like to greet him slightly different. She added a special case to her function, but she made a mistake.

Can you help her?
=>  function greet(name){
  if(name === "Johnny")
    return "Hello, my love!";
  return "Hello, " + name + "!";
}

8. Is n divisible by x and y?
Create a function that checks if a number n is divisible by two numbers x AND y. All inputs are positive, non-zero numbers
=>  function isDivisible(n, x, y) {
  return n%x==0 && n%y==0;
  }

9. Return Negative
In this simple assignment you are given a number and have to make it negative. But maybe the number is already negative?
=>  function makeNegative(num) {
  if(num<0){
    return num;
  }
  return num*-1;
}

10. Find the smallest integer in the array
class SmallestIntegerFinder {
  findSmallestInt(args) {
    let min=args[0];
    for(let i=0; i<args.length;i++){
      if(args[i]<min){
        min=args[i];
      }
    }
    return min;
  }
}

11. Grasshopper - Summation
=>  var summation = function (num) {
  // Code here
  let sum=0;
  for(let i=1;i<num+1;i++){
    sum=sum+i;
  }
  return sum;
}

12. Get the mean of an array
=>  function getAverage(marks){
  //TODO : calculate the downward rounded average of the marks array
  let sum=0;
  for(let i=0;i<marks.length;i++){
    sum=sum+marks[i];
  }
  return Math.floor(sum/marks.length);
}

13. Rock Paper Scissors!
=>  const rps = (p1, p2) => {
  if(p1==p2)
    return 'Draw!';
  if(p1=='rock' && p2=='scissors')
    return 'Player 1 won!'
  else if(p1=='scissors' && p2=='paper')
    return 'Player 1 won!'
  else if(p1=='paper' && p2=='rock')
    return 'Player 1 won!'
  else
    return 'Player 2 won!'
};

14. Remove First and Last Character
=>  function removeChar(str){
 return str.substr(1,str.length-2);

};

15. Sum of positive
=> function positiveSum(arr) {
    let sum=0;
  if(arr.length==0){
    return sum;
  }
   for(let i=0; i<arr.length; i++){
     if(arr[i]>0){
       sum=sum+arr[i];
     }
   }return sum;
}

16. Basic Mathematical Operations
=>  function basicOp(operation, value1, value2)
{
  // Code
  switch(operation){
      case '+': return value1+value2;
      case '-': return value1-value2;
      case '*': return value1*value2;
      case '/': return value1/value2;
  }
}

17. String repeat
=>  function repeatStr (n, s) {
  return s.repeat(n);
}

18. Convert a string to an array
=>  function stringToArray(string){

	// code code code
  return string.split(" ");

}

19. Remove String Spaces
=>  function noSpace(x){
  return x.replace(/ /g, '')
}

20. Beginner - Lost Without a Map
=>  function maps(arr){
  let l=[]
  for(let i=0;i<arr.length;i++){
    let a=arr[i]*2
    l.push(a)
    
  }
  return l;

}

21. Is he gonna survive?
A hero is on his way to the castle to complete his mission. However, he's been told that the castle is surrounded with a couple of powerful dragons! each dragon takes 2 bullets to be defeated, our hero has no idea how many bullets he should carry.. Assuming he's gonna grab a specific given number of bullets and move forward to fight another specific given number of dragons, will he survive?

Return true if yes, false otherwise :)
=>  function hero(bullets, dragons){
//Get Coding!
 const result = bullets/dragons >= 2 ? true:false;
  return result;
  
}

22. Array plus array
=>  function arrayPlusArray(arr1, arr2) {
  let sum1=0
  let sum2=0
    for(let i=0;i<arr1.length;i++){
        sum1=sum1+arr1[i]
    } 
    for(let i=0;i<arr2.length;i++){
       sum2=sum2+arr2[i] 
    }
  return sum1+sum2//something went wrong
}

23. Century From Year
=>  function century(year) {
  if(year%100==0){
    return Math.floor(year/100)
  }
  else{
    return Math.floor(year/100)+1
  }
  
}

24. Cat years, Dog years
=>  var humanYearsCatYearsDogYears = function(y) {
  if (y==1) return [1,15,15]
  if (y==2) return [2,24,24]
  return [y,(y-2)*4+24,(y-2)*5+24]
}

25. Total amount of points
=>  function points(games) {
  let total=0
  for(let i=0;i<games.length;i++){
    const value=games[i];
    const parts=value.split(":");
    if(parts[0]>parts[1])
      total+=3;
    else if(parts[0]==parts[1])
      total+=1;
  }
    
    return total;
  
}

26. 
